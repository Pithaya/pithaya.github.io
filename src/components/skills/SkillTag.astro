---
import { CircleQuestionMark } from "@lucide/astro";
import type { Skill } from "src/types/skill";
import { SkillStatus } from "src/types/skill-status";

interface Props {
  skill: Skill;
}

const { skill } = Astro.props;

let skillToolTip: string | undefined = undefined;

if (skill.status === SkillStatus.Interested) {
  skillToolTip = "Want to learn";
} else if (skill.status === SkillStatus.Learning) {
  skillToolTip = "Currently learning";
}
---

<div
  data-tippy-content={skillToolTip}
  class="bg-slate-100 dark:bg-slate-700 shadow-sm px-3 py-1 rounded-lg flex items-center justify-center gap-1 text-sm"
  class:list={[
    {
      "opacity-40": skill.status === SkillStatus.Interested,
      "text-subdued": skill.status === SkillStatus.Learning,
    },
  ]}
>
  <span>{skill.name}</span>
  {
    skill.status !== SkillStatus.Proficient && (
      <CircleQuestionMark stroke-width={1} size={10} class="hidden sm:block" />
    )
  }
</div>

<script>
  import tippy from "tippy.js";
  tippy("[data-tippy-content]", {
    theme: "default",
  });
</script>
